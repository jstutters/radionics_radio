(function($){var methods={init:function(options){var settings=$.extend({classes:['rot-knob'],frameCount:64,frameWidth:64,frameHeight:64,minimumValue:-100,maximumValue:100,detent:false,detentValue:0,detentThreshold:10,discreteSteps:false,stepCount:2,dragVertical:true,invertDirection:false,dragMultiplier:1,animationFPS:25,hideInput:false,hideRealValue:true,isToggle:true,callback:function(){}},options);$('body').data('knobRot',{dragging:false});methods.addCssStyles();return this.each(function(){if(settings.minimumValue>=settings.maximumValue){}else if(settings.discreteSteps==true&&settings.stepCount<=1){throw'Knob range error: Maximum value must be greater than minimum value.';throw'Invalid step count: Discrete knob must have a minimum of 2 steps.';}
var $this=$(this);$this.callback=settings.callback;$this.attr('autocomplete','off');if($this.is('input:text')){var realValueField=$('<input>',{'type':'text','value':parseFloat($this.val()),'autocomplete':'off'});realValueField.data('knobRot',{'settings':settings,'outputField':$this});$this.after(realValueField);realValueField.data('knobRot').rangeSize=settings.maximumValue- settings.minimumValue;realValueField.data('knobRot').rangeOffset=0- settings.minimumValue;if(settings.discreteSteps==true){realValueField.data('knobRot').stepIncrement=(settings.maximumValue- settings.minimumValue)/(settings.stepCount- 1);}
realValueField.data('knobRot').calculatedValue=methods.calculateValue(realValueField);realValueField.data('knobRot').currentFrame=methods.calculateFrame(realValueField);realValueField.data('knobRot').dirtyData=true;var updateDelay=1000/settings.animationFPS;var classes=settings.classes.slice();classes[classes.length]='rot-knob-base';var forName=$this.attr('name');if(typeof(forName)=='undefined'){forName='unnamed';}
var forId=$this.attr('id');if(typeof(forId)=='undefined'){forId='noid';}
classes[classes.length]='for-input-'+ forName+'-'+ forId;var knobDiv=$('<div>',{'class':classes.join(' ')});knobDiv.data('knobRot',{'realValue':realValueField,'outputField':$this});realValueField.data('knobRot').knobDiv=knobDiv;$this.data('knobRot',{'knob':knobDiv,'realValue':realValueField});knobDiv.css({'width':settings.frameWidth+'px','height':settings.frameHeight+'px','background-position':methods.calculateBackgroundOffsetX(realValueField)+'px 0px','cursor':methods.getDragCursorClass(realValueField)});knobDiv.on('mousedown.knobRot',function(event){if(event.which!=1){return;}
$knobDiv=$(this);if($('body').data('knobRot').dragging!=true){var startOffset={'left':event.screenX,'top':event.screenY};$knobDiv.addClass('dragging');$('body').data('knobRot').dragging=true;$('body').data('knobRot').lastOffset=startOffset;$('body').data('knobRot').knobDiv=$knobDiv;$('body').addClass(methods.getDragCursorClass($knobDiv.data('knobRot').realValue));$knobDiv.data('knobRot').outputField.trigger('knobdragstart',$knobDiv);}});$(document).on('mousemove.knobRot',function(event){if($('body').data('knobRot').dragging==true){var displacement={'horizontal':event.screenX- $('body').data('knobRot').lastOffset.left,'vertical':event.screenY- $('body').data('knobRot').lastOffset.top}
$('body').data('knobRot').lastOffset={'left':event.screenX,'top':event.screenY}
methods.updateValue($('body').data('knobRot').knobDiv.data('knobRot').realValue,displacement);$('body').data('knobRot').knobDiv.data('knobRot').outputField.trigger('knobrefresh',$('body').data('knobRot').knobDiv);$('body').data('knobRot').knobDiv.data('knobRot').outputField.trigger('knobdrag',$('body').data('knobRot').knobDiv);}});$(document).on('mouseup.knobRot',function(){methods.stopDrag();});$('body').on('selectstart.knobRot select.knobRot mousedown.knobRot mouseover.knobRot',function(){if($('body').data('knobRot').dragging==true){return false;}});$this.on('knobrefresh.knobRot',function(){realValueField.data('knobRot').dirtyData=true;});knobDiv.on('mouseover.knobRot mouseout.knobRot mouseup.knobRot',function(){knobDiv.data('knobRot').outputField.trigger('knobrefresh',knobDiv);});knobDiv.on('mouseover',function(){$this.addClass('hover');var cursorClass=methods.getDragCursorClass(knobDiv.data('knobRot').realValue);knobDiv.addClass(cursorClass);knobDiv.data('knobRot').outputField.trigger('knobmouseover',knobDiv);});knobDiv.on('mouseout',function(){$this.removeClass('hover');var cursorClass=methods.getDragCursorClass(knobDiv.data('knobRot').realValue);knobDiv.removeClass(cursorClass);knobDiv.data('knobRot').outputField.trigger('knobmouseout',knobDiv);});realValueField.after(knobDiv);setInterval(function(){methods.updateCallback(realValueField);},updateDelay);if(settings.hideInput==true){$this.hide();}
if(settings.hideRealValue==true){realValueField.hide();}
$this.attr('disabled','disabled');$this.attr('unselectable','on');$this.on('mousedown',function(){return false;});$this.on('mouseover',function(){return false;});$this.trigger('knobrefresh',knobDiv);$this.trigger('knobready',knobDiv);}});},getvalue:function(){$this=$(this);if($this.is('input:text')){if($this.data('knobRot')){return $this.data('knobRot').calculatedValue;}else{throw'Can not call "value" on a non-knobRot element';}}else{throw'Not a valid input element for knobRot.getvalue';}},set:function(value){return $(this).each(function(){var $this=$(this);if($this.is('input:text')){$this.data('knobRot').realValue.val(parseFloat(value));$this.data('knobRot').realValue.trigger('knobrefresh');}});},calculateStep:function($realValueField){var knobData=$realValueField.data('knobRot');var knobSettings=knobData.settings;if(knobSettings.discreteSteps){var adjustedValue=parseFloat($realValueField.val())+ knobData.rangeOffset;var rangeFraction=adjustedValue/knobData.rangeSize;var calculatedStep=Math.round(rangeFraction*(knobSettings.stepCount- 1));return calculatedStep;}else{throw'Unable to calculate discrete step offset for non-discrete knob.';}},calculateValue:function($realValueField){var knobData=$realValueField.data('knobRot');var knobSettings=knobData.settings;if(knobSettings.discreteSteps==true){var currentStep=methods.calculateStep($realValueField);var calculatedValue=currentStep*knobData.stepIncrement- knobData.rangeOffset;}else{var calculatedValue=parseFloat($realValueField.val());}
if(knobSettings.detent==true&&calculatedValue>=knobSettings.detentValue- knobSettings.detentThreshold&&calculatedValue<=knobSettings.detentValue+ knobSettings.detentThreshold){if($realValueField.data('knobRot').calculatedValue!=calculatedValue&&($realValueField.data('knobRot').calculatedValue<knobSettings.detentValue- knobSettings.detentThreshold||$realValueField.data('knobRot').calculatedValue>knobSettings.detentValue+ knobSettings.detentThreshold)){$realValueField.data('knobRot').outputField.trigger('knobenterdetent',$realValueField.data('knobRot').knobDiv);}
calculatedValue=knobSettings.detentValue;}else if($realValueField.data('knobRot').calculatedValue==knobSettings.detentValue&&$realValueField.data('knobRot').calculatedValue!=calculatedValue&&calculatedValue!=knobSettings.detentValue)
{$realValueField.data('knobRot').outputField.trigger('knobleavedetent',$realValueField.data('knobRot').knobDiv);}
if(calculatedValue<knobSettings.minimumValue){$realValueField.val(knobSettings.minimumValue);$realValueField.data('knobRot').outputField.trigger('knobvaluemin',$realValueField.data('knobRot').knobDiv);return knobSettings.minimumValue;}else if(calculatedValue>knobSettings.maximumValue){$realValueField.val(knobSettings.maximumValue);$realValueField.data('knobRot').outputField.trigger('knobvaluemax',$realValueField.data('knobRot').knobDiv);return knobSettings.maximumValue;}
return calculatedValue;},calculateFrame:function($realValueField){var knobData=$realValueField.data('knobRot');var knobSettings=knobData.settings;var calculatedValue=methods.calculateValue($realValueField)+ knobData.rangeOffset;var rangeFraction=calculatedValue/knobData.rangeSize;var calculatedFrame=Math.round(rangeFraction*(knobSettings.frameCount- 1));if(calculatedFrame>(knobSettings.frameCount- 1)){return(knobSettings.frameCount- 1);}else if(calculatedFrame<0){return 0;}
if($realValueField.data('knobRot').currentFrame!=calculatedFrame){$realValueField.data('knobRot').outputField.trigger('knobframechange',[knobData,$realValueField.data('knobRot').currentFrame,calculatedFrame]);}
return calculatedFrame;},calculateBackgroundOffsetX:function($realValueField){var knobData=$realValueField.data('knobRot');var knobSettings=knobData.settings;return 0- methods.calculateFrame($realValueField)*knobSettings.frameWidth;},updateCallback:function($realValueField){if($realValueField.data('knobRot').dirtyData==true){$realValueField.data('knobRot').dirtyData=false;$realValueField.data('knobRot').knobDiv.css('background-position',methods.calculateBackrgroundOffset($realValueField));$realValueField.data('knobRot').calculatedValue=methods.calculateValue($realValueField);$realValueField.data('knobRot').outputField.val($realValueField.data('knobRot').calculatedValue);$realValueField.data('knobRot').outputField.data('knobRot').calculatedValue=$realValueField.data('knobRot').calculatedValue;$realValueField.data('knobRot').outputField.callback();}},stopDrag:function(){if($('body').data('knobRot').dragging==true){var $knobDiv=$('body').data('knobRot').knobDiv;$('body').data('knobRot').dragging=false;$knobDiv.removeClass('dragging');$('body').removeClass(methods.getDragCursorClass($knobDiv.data('knobRot').realValue));$knobDiv.data('knobRot').outputField.trigger('knobrefresh');}},updateValue:function($realValueField,displacement){var change=0;if($realValueField.data('knobRot').settings.dragVertical){change=displacement.vertical;}else{change=displacement.horizontal;}
change=change*$realValueField.data('knobRot').settings.dragMultiplier;if((!$realValueField.data('knobRot').settings.invertDirection&&$realValueField.data('knobRot').settings.dragVertical==true)||($realValueField.data('knobRot').settings.invertDirection&&$realValueField.data('knobRot').settings.dragVertical==false)){change=0- change;}
var currentValue=parseFloat($realValueField.val());var newValue=currentValue+ change;if(newValue>$realValueField.data('knobRot').settings.maximumValue){newValue=$realValueField.data('knobRot').settings.maximumValue;}else if(newValue<$realValueField.data('knobRot').settings.minimumValue){newValue=$realValueField.data('knobRot').settings.minimumValue;}
$realValueField.val(newValue);},calculateBackrgroundOffset:function($realValueField){var offsetX=methods.calculateBackgroundOffsetX($realValueField)+'px';var offsetY="0px";if($realValueField.data('knobRot').outputField.hasClass('hover')&&$('body').data('knobRot').dragging==false){offsetY=(0- $realValueField.data('knobRot').settings.frameHeight)+"px";}
if($('body').data('knobRot').dragging==true&&$realValueField.is($('body').data('knobRot').knobDiv.data('knobRot').realValue)){offsetY=(0- $realValueField.data('knobRot').settings.frameHeight*2)+"px";}
return offsetX+" "+ offsetY;},getDragCursorClass:function($realValueField){if($realValueField.data('knobRot').settings.dragVertical==true){return'rotknob-n-resize';}else{return'rotknob-e-resize';}},addCssStyles:function(){var styleElement=$('<style type="text/css" rel="stylesheet">'+'	.rotknob-n-resize{ cursor: n-resize!important; }'+'	.rotknob-e-resize{ cursor: e-resize!important; }'+'</style>').appendTo('body');}};$.fn.knobRot=function(method){if(methods[method]){return methods[method].apply(this,Array.prototype.slice.call(arguments,1));}else if(typeof method==='object'||!method){return methods.init.apply(this,arguments);}else{$.error('Method '+ method+' does not exist on jQuery.knobRot');}};})(jQuery);